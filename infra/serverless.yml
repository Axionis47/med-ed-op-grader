service: med-ed-op-grader
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  environment:
    SUBMISSIONS_TABLE: !Ref SubmissionsTable
    S3_BUCKET_TRANSCRIPTS: !Ref TranscriptsBucket
    TRANSCRIBE_MEDICAL: 'true'
    TRANSCRIBE_LANGUAGE: 'en-US'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:provider.environment.S3_BUCKET_TRANSCRIPTS}
            - arn:aws:s3:::${self:provider.environment.S3_BUCKET_TRANSCRIPTS}/*
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
          Resource: !GetAtt SubmissionsTable.Arn
        - Effect: Allow
          Action:
            - transcribe:StartMedicalTranscriptionJob
          Resource: '*'
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'

functions:
  api:
    handler: api/lambda_handler.lambda_handler
    events:
      - httpApi: '*'

resources:
  Resources:
    TranscriptsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
    SubmissionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: submission_id
            AttributeType: S
        KeySchema:
          - AttributeName: submission_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

